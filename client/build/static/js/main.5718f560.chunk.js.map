{"version":3,"sources":["logo.svg","Pictures/globe1.jpg","Pictures/chart.jpg","Components/navbar.jsx","Components/GraphComponents/ComparisonBarCountry.jsx","Components/GraphComponents/ComparisonBarTech.jsx","Components/GraphComponents/KPIpaper.jsx","Components/GraphComponents/LineChartCustum.jsx","Components/GraphComponents/Hover.jsx","Components/GraphComponents/SwitchKPI.jsx","Components/Graph.jsx","Components/MapComponents/Slider.jsx","Components/MapComponents/YearSlider.jsx","Components/MapComponents/InfoComp.jsx","Components/MapComponents/NormalizeButton.jsx","Components/MapComponents/ComparisonBar.jsx","Components/MapComponents/Feature.jsx","Components/MapComponents/TableComp.jsx","Components/MapComponents/TechComp.jsx","Components/Map.jsx","Components/HomeComponents/ButtonBase.jsx","Components/Querflow.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","myStyle","marginLeft","color","fontSize","textDecoration","navbar","Navbar","style","expand","Brand","height","float","src","alt","Nav","display","justifyContent","alignItems","activeStyle","fontWeight","exact","to","Component","useStyles","makeStyles","theme","root","width","position","margin","left","transform","border","borderRadius","marginTop","spacing","ComprationBarCountry","props","classes","className","Autocomplete","multiple","id","options","Countries","onChange","event","value","getCountries","renderInput","params","TextField","variant","label","placeholder","ComprationBarTech","Tags","getOptionLabel","TagName","getTech","padding","h1","fontFamily","p","lineHeight","h6","number","textAlign","bottom","equals","borderBottom","overflow","KPI","Box","flexDirection","ml","mt","LineChartcu","makeDataSets","data","result","map","tech","i","series","title","d","y","fill","backgroundColor","pointRadius","borderColor","borderWidth","lineTension","footer","tooltip","kpi","push","canvasRef","React","createRef","this","myChart","datasets","update","Chart","current","type","maintainAspectRatio","animation","duration","scales","yAxes","stacked","scaleLabel","fontStyle","labelString","rotate","ticks","callback","index","labels","fontColor","xAxes","tooltips","callbacks","tooltipItem","console","log","Math","round","yLabel","datasetIndex","afterTitle","x","ref","AntSwitch","withStyles","switchBase","opacity","thumb","boxShadow","track","background","checked","Switch","CustomizedSwitches","useState","checkedC","state","setState","FormGroup","Typography","component","Grid","container","item","target","name","MyButton","styled","Button","textTransform","Graph","TechChoosen","CountryChoosen","showButton","Result","length","onClick","switch","transformArr","techs","countries","Array","apply","j","analyse","a","c","toString","toLowerCase","resultSpacial","Promise","all","fetch","res","json","isArray","old","numTechs","numCountry","switchKPI","country","kpiChoosen","data1","point","parseFloat","allData","Counter","TotalUsers","yAxis","data2","CountAnswer","CountQuestion","kpiButton","makeTechNames","names","Loading","handleClick","m","Paper","elevation","pl","flexWrap","css","maxWidth","key","PureComponent","YearSlider","paddingBottom","gutterBottom","Slider","defaultValue","aria-labelledby","step","marks","min","max","valueLabelDisplay","onChangeCommitted","getYear","zIndex","getNew","GetNew","backgroundImage","button","customWidth","noMaxWidth","InfoComp","norm","longText","right","Tooltip","NormalizeButton","setValue","top","minWidth","FormControl","FormLabel","RadioGroup","aria-label","getNormalize","FormControlLabel","control","Radio","ComprationBar","getTechResearch","Feature","totalTechs","feature","properties","counter","firstDeg","deg","percent","parseInt","isNaN","createTheme","default","input","TableComp","columns","features","Object","keys","selector","sortable","cell","row","counter1","counter2","question1","question2","answer1","answer2","makeColumns","obj","pic","paddingRight","question","answer","totalusers","makeData","fixedHeader","fixedHeaderScrollHeight","onRowClicked","addMarker","subHeader","colors","TechComp","Wrapper","div","Map","LoadMap","corner1","L","latLng","corner2","maxBounds","latLngBounds","center","zoom","zoomControl","tileLayer","attribution","subdomains","maxZoom","minZoom","addTo","layer","geoJSON","addFlag","Flags","flag","alpha3","file_url","GeoJsonFile","componentWillMount","componentDidMount","LayerGroup","layerGroup","initsetStyle","fillColor","fillOpacity","stroke","onEachFeature","bindTooltip","on","setStyle","weight","color1","color2","bindPopup","technology","ReactDOMServer","renderToString","year","Year","innerText","TechResearch","getTechnologyYear","removeLayer","Normalize","getMinMax","array","array2","maxValue","minValue","maxValue2","minValue2","choosen","techChoosenYear","filter","k","Merged","MergeFeatures","Layer","collections","numOfTechs","JSON","parse","stringify","addMarkers","e","icon","iconSize","iconAnchor","popupAnchor","iconUrl","geometry","marker","coordinates","openPopup","clearMarkers","clearLayers","handleScroll","section","scrollIntoView","behavior","block","getTechnology","techChoosen","active","spinner","text","paddingTop","marginRight","cursor","images","url","require","image","breakpoints","down","focusVisible","imageButton","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","black","transition","transitions","create","imageTitle","imageMarked","ButtonBases","ButtonBase","focusRipple","focusVisibleClassName","Link","Home","getTags","getFlags","then","path","strict","App","Querflow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5718f560.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/globe1.6044060a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chart.6c38d43b.jpg\";","import React, { Component } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom'\nconst myStyle = {\n    marginLeft: '5vh',\n    color: 'black',\n    fontSize:'1.5em',\n    textDecoration:\"none\"\n  \n\n}\nexport default class navbar extends Component {\n    \n    render() {\n        return (\n    \n             <Navbar  style={{}} expand=\"sm\">\n             <Navbar.Brand > <img style={{height:\"8vh\",float:\"left\"}}  src=\"https://i.ibb.co/ZJgXXVT/8ec93e8f-96ba-44a5-ab3b-871b9d400a9c-200x200.png\" alt=\"pic\"></img></Navbar.Brand>\n            \n                 <Nav style={{height:\"8vh\",display:\"flex\",justifyContent:\"space-evenly\",alignItems:\"center\"}}>\n                     <NavLink  style={myStyle} activeStyle={{ fontWeight: 'bold'}} exact to=\"/\">Home</NavLink>\n                     <NavLink  style={myStyle} activeStyle={{ fontWeight: 'bold' }} to=\"/map\">Map</NavLink>\n                     <NavLink  style={myStyle} activeStyle={{ fontWeight: 'bold' }} to={\"/graph\"}>Graph</NavLink>\n \n                   \n \n \n                 </Nav>\n \n     \n         </Navbar>\n        )\n    }\n}\n\n","import React from 'react'\n//import Technologies from '../../Files/Technologies'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n        width: '45vw',\n        position: 'relative',\n        margin: 3,\n        left: '50%',\n        transform: 'translate(-50%)',\n        border: '2px solid #7B4008',\n        borderRadius: 10,\n\n\n        '& > * + *': {\n            marginTop: theme.spacing(3),\n        },\n    },\n}));\n\nconst handleInputChange = (params) => {\n    var propsArray = params.InputProps.startAdornment || []\n    if (propsArray.length > 2) {\n        params.InputProps.startAdornment = propsArray.pop()\n        return <TextField {...params} variant=\"outlined\" label=\"Technology\" placeholder=\"Technology\" />\n    }\n    else return <TextField {...params} variant=\"outlined\" label=\"Technology\" placeholder=\"Technology\" />\n    // if (params.InputProps.startAdornment == undefined)\n\n    // else return <TextField {...params} variant=\"outlined\" label=\"Technology\" placeholder=\"Technology\" />\n}\nexport default function ComprationBarCountry(props) {\n    const Check = (e) => {\n        console.log(e)\n    }\n    const classes = useStyles();\n    return (\n        <div className={classes.root} style={{}}>\n            <Autocomplete\n                multiple\n                id=\"multiple-limit-tags\"\n                options={props.Countries}\n                onChange={(event, value) => props.getCountries(value)}\n                renderInput={(params) => {\n                    return <TextField {...params} variant=\"outlined\" label=\"Country\" placeholder=\"Country\" />\n                }}\n\n            />\n        </div>\n    )\n}","import React from 'react'\n//import Technologies from '../../Files/Technologies'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n        width: '45vw',\n        position: 'relative',\n        margin: 3,\n        left: '50%',\n        transform: 'translate(-50%)',\n        border: '2px solid #7B4008',\n        borderRadius: 10,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\n\nexport default function ComprationBarTech(props) {\n    const Check = (e) => {\n        console.log(e)\n    }\n    const classes = useStyles();\n    return (\n        <div className={classes.root} style={{}}>\n            <Autocomplete\n                multiple\n                id=\"multiple-limit-tags1\"\n                options={props.Tags}\n                getOptionLabel={(Tags) => Tags.TagName}\n                onChange={(event, value) => props.getTech(value)}\n                renderInput={(params) => {\n                    return <TextField {...params} variant=\"outlined\" label=\"Technology\" placeholder=\"Technology\" />\n                }}\n\n            />\n        </div>\n    )\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: '0 30px',\r\n    },\r\n    h1: {\r\n        fontFamily: 'Montserrat',\r\n        //textDecoration: 'underline',\r\n    },\r\n    p: {\r\n        fontFamily: 'Comfortaa',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        lineHeight: 1.5\r\n\r\n    },\r\n    h6: {\r\n\r\n        color: 'red'\r\n    },\r\n    number: {\r\n        display: 'block',\r\n        textAlign: 'left',\r\n        marginLeft: 10,\r\n        fontFamily: 'Comfortaa',\r\n        fontSize: 17,\r\n        bottom: 30\r\n    },\r\n    equals: {\r\n        display: 'block',\r\n        height: 0,\r\n        borderBottom: 'solid 1px black',\r\n        overflow: 'hidden',\r\n\r\n    }\r\n});\r\n\r\nexport default function KPI() {\r\n    const classes = useStyles();\r\n    return <div className={classes.root}>\r\n        <h1 className={classes.h1}>KPI</h1>\r\n        <p className={classes.p}>There are two KPI's that defined the usage and development of technology.</p>\r\n        <div>\r\n            <Box display=\"flex\" flexDirection=\"row\">\r\n                <Box>\r\n                    <h3 className={classes.h1}><b>Popularity of technology = </b></h3>\r\n                </Box>\r\n                <Box display='flex' flexDirection=\"column\" ml={3} mt={1}>\r\n                    <span className={classes.number}>Num of users intaractive with chosen Tech</span>\r\n                    <span className={classes.equals} style={{ width: 390 }}>=</span>\r\n                    <span className={classes.number} >Total users of all Techs in Country</span>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n        <div>\r\n            <Box display=\"flex\" flexDirection=\"row\">\r\n                <Box>\r\n                    <h3 className={classes.h1}><b>Experts = </b></h3>\r\n                </Box>\r\n                <Box display='flex' flexDirection=\"column\" ml={3} mt={2}>\r\n                    <span className={classes.number}>Sum of Answers</span>\r\n                    <span className={classes.equals} style={{ width: 160 }}>=</span>\r\n                    <span className={classes.number}>Sum of Questions</span>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n\r\n    </div >\r\n}","import React, { PureComponent } from 'react';\r\nimport Chart from 'chart.js'\r\n\r\n\r\n\r\nexport default class LineChartcu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvasRef = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //this.myChart.data.labels = this.props.data[0].map(d => d.x);\r\n        this.myChart.data.datasets = this.makeDataSets(this.props.data);\r\n        this.myChart.update();\r\n    }\r\n    makeDataSets = (data) => {\r\n        let result = []\r\n        data.map((tech, i) => {\r\n            let series = {}\r\n            series.label = this.props.title[i]\r\n            series.data = tech.map(d => d.y)\r\n            series.fill = 'none'\r\n            series.backgroundColor = this.props.color[i]\r\n            series.pointRadius = 2\r\n            series.borderColor = this.props.color[i]\r\n            series.borderWidth = 3\r\n            series.lineTension = 0\r\n            series.footer = tech.map(d => d.tooltip)\r\n            series.kpi = tech[0].kpi\r\n            result.push(series)\r\n        })\r\n        //console.log(result)\r\n        return result\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.myChart = new Chart(this.canvasRef.current, {\r\n            type: 'line',\r\n            options: {\r\n                maintainAspectRatio: false,\r\n                animation: {\r\n                    duration: 0\r\n                },\r\n                scales: {\r\n                    yAxes: [\r\n                        {\r\n                            stacked: false,\r\n                            scaleLabel: {\r\n                                fontFamily: 'Comfortaa', fontStyle: 'initial', fontSize: 20, labelString: 'KPI', display: true, rotate: 90\r\n                            },\r\n                            ticks: {\r\n                                callback: function (label, index, labels) {\r\n                                    return label + '%';\r\n                                },\r\n                                fontColor: \"#853411\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    xAxes: [\r\n                        {\r\n                            ticks: { fontColor: \"#853411\" },\r\n                            scaleLabel: { fontFamily: 'Comfortaa', fontStyle: 'initial', fontSize: 20, labelString: 'Year', display: true }\r\n                        }\r\n                    ]\r\n                },\r\n                tooltips: {\r\n                    callbacks: {\r\n                        label: function (tooltipItem, data) {\r\n                            console.log(data.datasets[0].kpi || '')\r\n                            return ((data.datasets[0].kpi + ' ') + Math.round(tooltipItem.yLabel * 100) / 100 + \"%\")\r\n                        },\r\n                        footer: function (tooltipItem, data) {\r\n                            console.log(tooltipItem, data)\r\n                            var foot = data.datasets[tooltipItem[0].datasetIndex].footer[tooltipItem[0].index] || '';\r\n                            return foot\r\n\r\n                        },\r\n                        afterTitle: function (tooltipItem, data) {\r\n                            return data.datasets[tooltipItem[0].datasetIndex].label || ''\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                labels: this.props.data[0].map(d => d.x),\r\n                datasets: this.makeDataSets(this.props.data)\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <canvas style={{ width: '600px', height: \"400px\" }} ref={this.canvasRef} />;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class HoverExample extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleMouseHover = this.handleMouseHover.bind(this);\r\n        this.state = {\r\n            isHovering: false,\r\n        };\r\n    }\r\n\r\n    handleMouseHover() {\r\n        this.setState(this.toggleHoverState);\r\n    }\r\n\r\n    toggleHoverState(state) {\r\n        return {\r\n            isHovering: !state.isHovering,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div\r\n                    onMouseEnter={this.handleMouseHover}\r\n                    onMouseLeave={this.handleMouseHover}\r\n                >\r\n                    Hover Me\r\n                </div>\r\n                {this.state.isHovering &&\r\n                    <div>\r\n                        Hovering right meow! 🐱\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n// const IOSSwitch = withStyles((theme) => ({\r\n//   root: {\r\n//     width: 42,\r\n//     height: 26,\r\n//     padding: 0,\r\n//     margin: theme.spacing(1),\r\n//   },\r\n//   switchBase: {\r\n//     padding: 1,\r\n//     '&$checked': {\r\n//       transform: 'translateX(16px)',\r\n//       color: theme.palette.common.white,\r\n//       '& + $track': {\r\n//         backgroundColor: '#52d869',\r\n//         opacity: 1,\r\n//         border: 'none',\r\n//       },\r\n//     },\r\n//     '&$focusVisible $thumb': {\r\n//       color: '#52d869',\r\n//       border: '6px solid #fff',\r\n//     },\r\n//   },\r\n//   thumb: {\r\n//     width: 24,\r\n//     height: 24,\r\n//   },\r\n//   track: {\r\n//     borderRadius: 26 / 2,\r\n//     border: `1px solid ${theme.palette.grey[400]}`,\r\n//     backgroundColor: theme.palette.grey[50],\r\n//     opacity: 1,\r\n//     transition: theme.transitions.create(['background-color', 'border']),\r\n//   },\r\n//   checked: {},\r\n//   focusVisible: {},\r\n// }))(({ classes, ...props }) => {\r\n//   return (\r\n//     <Switch\r\n//       focusVisibleClassName={classes.focusVisible}\r\n//       disableRipple\r\n//       classes={{\r\n//         root: classes.root,\r\n//         switchBase: classes.switchBase,\r\n//         thumb: classes.thumb,\r\n//         track: classes.track,\r\n//         checked: classes.checked,\r\n//       }}\r\n//       {...props}\r\n//     />\r\n//   );\r\n// });\r\n\r\nconst AntSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 130,\r\n        height: 55,\r\n        margin: 3,\r\n        display: 'flex',\r\n\r\n    },\r\n    switchBase: {\r\n        margin: 9,\r\n        height: 20,\r\n        borderRadius: 10,\r\n        color: '#FFEECC',\r\n        '&$checked': {\r\n            transform: 'translateX(60px)',\r\n            color: '#53090C',\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: '#931015',\r\n\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 35,\r\n        height: 24,\r\n        boxShadow: 'none',\r\n        borderRadius: 10,\r\n\r\n    },\r\n    track: {\r\n        border: '2px solid #4D0D00',\r\n        borderRadius: 10,\r\n        opacity: 1,\r\n        background: 'linear-gradient(45deg, #F9BE8F 10%, #F96113 90%)',\r\n\r\n\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default function CustomizedSwitches(props) {\r\n    const [state, setState] = React.useState({\r\n        checkedC: true,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.onChange(event.target.checked)\r\n    };\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Typography component=\"div\">\r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item style={{ width: '50px', textAlign: 'center', fontFamily: 'Comfortaa', fontWeight: 'bold' }}>Experts</Grid>\r\n                    <Grid item>\r\n                        <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\r\n                    </Grid>\r\n                    <Grid item style={{ width: '50px', textAlign: 'center', fontFamily: 'Comfortaa', fontWeight: 'bold' }}>Popularity of technology</Grid>\r\n                </Grid>\r\n            </Typography>\r\n        </FormGroup>\r\n    );\r\n}\r\n","import React, { PureComponent } from 'react';\nimport { Button, Box, Paper } from '@material-ui/core'\nimport ComparisonBarCountry from './GraphComponents/ComparisonBarCountry'\nimport ComparisonBarTech from './GraphComponents/ComparisonBarTech'\nimport LoadingOverlay from 'react-loading-overlay';\nimport { styled } from '@material-ui/core/styles';\nimport KPI from './GraphComponents/KPIpaper'\nimport LineChartcu from './GraphComponents/LineChartCustum'\nimport HoverExample from './GraphComponents/Hover'\nimport CustomizedSwitches from './GraphComponents/SwitchKPI'\nimport 'chart.js'\n\nconst MyButton = styled(Button)({\n    background: 'linear-gradient(45deg, #F9BE8F 10%, #F96113 90%)',\n    border: '2px solid #7B4008',\n    borderRadius: 10,\n    height: 60,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    textTransform: 'none',\n    boxShadow: '4px 4px 13px 0px',\n    fontSize: 20,\n    fontFamily: 'Comfortaa',\n    fontWeight: 'bold',\n    //position: \"absolute\",\n    padding: '0 30px'\n});\n\n\n\nexport default class Graph extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Countries: props.countries,\n            Tags: props.Tags,\n            Loading: false,\n            TechChoosen: [],\n            CountryChoosen: [],\n            Result: [],\n            kpiChoosen: \"KPI 1\",\n            yAxis: \"\"\n        }\n        this.handleClick = async (value) => {\n            this.setState({\n                Loading: !this.state.Loading\n            })\n        }\n\n    }\n\n    getTech = (value) => {\n        this.setState({\n            TechChoosen: value,\n        })\n    }\n    getCountries = (value) => {\n        this.setState({\n            CountryChoosen: value,\n        })\n    }\n\n    showButton = () => {\n        if (this.state.Result.length > 1) {\n            return (<MyButton onClick={this.switch}  >same tech in one graph</MyButton>)\n        }\n    }\n    transformArr = (techs, countries) => {\n        let data = Array.apply(null, { length: techs }).map(function () { });\n        for (let i = 0; i < techs; i++) {\n            for (let j = 0; j < countries; j++) {\n                data[i] = Array.apply(null, { length: countries }).map(function () { });\n            }\n        }\n        console.log(data)\n        return data\n    }\n\n\n    analyse = async () => {\n        const techs = this.state.TechChoosen\n        let countries = this.state.CountryChoosen.map(c => c.toString().toLowerCase());\n        var result = []\n        var resultSpacial = [[]]\n        for (let i = 0; i < countries.length; i++) {\n            var data = await Promise.all(techs.map(async tech => {\n                const res = await fetch(`http://localhost:5000/involved/${tech.TagName}/${countries[i]}`)\n                const json = res.json()\n                return json\n            }))\n            result.push(data);\n        }\n        if (result.length > 1 && techs.length == 1) {\n            resultSpacial[0].push(result[0][0])\n            for (let i = 1; i < result.length; i++) {\n                resultSpacial[0].push(result[i][0]);\n            }\n        }\n        if (!(Array.isArray(resultSpacial) && resultSpacial[0].length)) {\n            console.log(result)\n            this.setState({\n                Result: result\n            })\n        } else {\n            console.log(resultSpacial)\n            this.setState({\n                Result: resultSpacial\n            })\n        }\n    }\n    switch = () => {\n        var old = this.state.Result;\n        var numTechs = old[0].length;\n        let numCountry = this.state.Result.length;\n        var result = this.transformArr(numTechs, numCountry)\n        for (let i = 0; i < numTechs; i++) {\n            for (let j = 0; j < numCountry; j++) {\n                result[i][j] = old[j][i]\n            }\n        }\n        console.log(result)\n        this.setState({\n            Result: result\n        })\n    }\n\n    switchKPI = (country) => {\n        let data = Array.apply(null, { length: country.length }).map(x => []);\n        country.map((tech, j) => {\n            if (this.state.kpiChoosen === \"KPI 1\") {\n                tech.data1.map((point, i) => { data[j].push({ x: point[0], y: parseFloat(point[1]), tooltip: tech.allData[i].Counter + \" Users \\n\" + tech.allData[i].TotalUsers + \" Total Users\", kpi: this.state.yAxis }) })\n                this.setState({\n                    yAxis: \"Total tech usage \"\n                })\n            }\n            else {\n                tech.data2.map((point, i) => { data[j].push({ x: point[0], y: parseFloat(point[1]), tooltip: tech.allData[i].CountAnswer + \" Answers \\n\" + tech.allData[i].CountQuestion + \" Questions\", kpi: this.state.yAxis }) })\n                //data.push({ \"data\": tech.data2, \"name\": tech.name, \"labels\": tech.allData.map(year => year.CountQuestion + \" Questions \\n\" + year.CountAnswer + \" Answers\") })\n                this.setState({\n                    yAxis: \"Ans/Ques\"\n                })\n            }\n        })\n        console.log(data)\n        return data\n    }\n\n    kpiButton = (value) => {\n        if (value === true) {\n            this.setState({ kpiChoosen: \"KPI 1\" })\n        } else this.setState({ kpiChoosen: \"KPI 2\" })\n\n    }\n    makeTechNames = (country) => {\n        let names = Array.apply(null, { length: country.length }).map(() => { })\n        for (let i = 0; i < names.length; i++) {\n            names[i] = country[i].name\n        }\n        return names\n    }\n\n    render() {\n\n        return (\n            <div style={{ width: '100%' }}>\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-start\" m={1} p={1} >\n                    <Box display=\"flex\" flexDirection=\"column\"  >\n                        <Paper style={{ backgroundColor: '#FFFD85', border: '1px solid #2E0E00', borderRadius: 10, height: 200, marginTop: 3 }} elevation={3}>\n                            <Box display=\"flex\" flexDirection=\"row\" m={1}>\n                                <Box display=\"flex\" flexDirection=\"column\"  >\n                                    <Box display=\"flex\" p={1}>\n                                        <ComparisonBarCountry Countries={this.state.Countries} getCountries={this.getCountries} display=\"block\" ></ComparisonBarCountry >\n                                    </Box>\n                                    <Box p={1}>\n                                        <ComparisonBarTech Tags={this.state.Tags} getTech={this.getTech} display=\"block\" ></ComparisonBarTech >\n                                    </Box>\n                                </Box>\n                                <Box display=\"flex\" alignItems=\"center\" p={1}>\n                                    <Box>\n                                        <MyButton onClick={this.analyse}>Analyse</MyButton>\n                                    </Box>\n                                </Box>\n                            </Box>\n                        </Paper>\n                        <Paper style={{ backgroundColor: '#FFFD85', border: '1px solid #2E0E00', borderRadius: 10, marginTop: 6 }} elevation={3}>\n                            <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"row\" alignItems='center' p={1}>\n                                <Box display=\"flex\" justifyContent=\"flex-start\" flexDirection=\"column\" p={1}>\n                                    <Box ml={6} style={{ fontSize: 25, fontWeight: 'bolder', color: '#FF4E1C', fontFamily: 'Comfortaa' }}>Switch KPI</Box>\n                                    <CustomizedSwitches onChange={this.kpiButton}></CustomizedSwitches>\n                                </Box>\n                                <Box pl={6}>{this.showButton()}</Box>\n                            </Box>\n                        </Paper>\n                    </Box>\n                    <Box display=\"flex\" flexDirection=\"column\" ml={1} mt={1}>\n                        <Paper style={{ backgroundColor: '#FFFD85', border: '1px solid #2E0E00', borderRadius: 10, height: 325 }} elevation={3}>\n                            <KPI></KPI>\n                        </Paper>\n                    </Box>\n                </Box>\n\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-start\" m={1} p={1} flexWrap=\"wrap\" css={{ maxWidth: '100%' }} >\n                    {this.state.Result.map((country, i) =>\n                        <div key={i}>\n                            <Box key={i + 2} p={1}>\n                                <LineChartcu\n                                    key={i + 3}\n                                    data={this.switchKPI(country)}\n                                    title={this.makeTechNames(country)}\n                                    color={['#9999FF', '#99FF99', '#003300', '#FF8080', '#B30095']}\n                                ></LineChartcu>\n\n                            </Box>\n                        </div>\n                    )}\n                </Box>\n            </div >\n        )\n    }\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nexport default function YearSlider(props) {\n    const classes = useStyles();\n    function valuetext(value) {\n         console.log(value)\n        return `${value}°C`;\n\n    }\n   const func=(e)=>{\n        console.log(parseInt(e.target.innerText) )\n    }\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", paddingBottom: '10px' }}>\n            <div className={classes.root}>\n                <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n                    Year\n      </Typography>\n                <Slider\n                    defaultValue={2015}\n                   // getAriaValueText={props.getYear }\n                    aria-labelledby=\"discrete-slider-small-steps\"\n                    step={1}\n                    marks\n                    min={2008}\n                    max={2020}\n                    valueLabelDisplay=\"on\"\n                    onChangeCommitted={props.getYear}\n                    \n                  \n\n                />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport Slider from './Slider'\nexport default function YearSlider(props) {\n    return (\n        <div>\n             <div style={{ position: 'absolute', left: '50%', bottom: 0, zIndex: 2,zIndex:3,transform:'translate(-50%, -50%)',margin:'0',marginRight:'-50%'}}>\n               <Slider getYear={props.getYear} getNew={props.GetNew} style={{}}></Slider>\n\n\n\n                <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div style={{ float: 'left', fontWeight: '400' }}>Low useage </div>\n\n                    <div style={{ float: 'left', borderRadius: '5px', backgroundImage: \"linear-gradient(to right,white 25%,green)\", width: '15vw', height: '2vh' }}></div>\n                    <div style={{ float: 'left', fontWeight: '400' }}> High useage</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst useStyles = makeStyles((theme) => ({\n    \n    button: {\n        margin: theme.spacing(1),\n    },\n    customWidth: {\n        maxWidth: 500,\n    },\n    noMaxWidth: {\n        maxWidth: 'none',\n    },\n}));\n\n\nexport default function InfoComp(props) {\n    const classes = useStyles();\n    if (props.norm === 'minmax') {\n        var longText = `Normalization by the number of users in the technology inside the country. the country that has the most users in the specific technology get full color and the lowest usage get none.\n    `;\n    }\n    else longText = `Normalization by the numbers of users in the technology devided by total number of users of all technologies inside the country`\n    return (\n        <div style={{ position: 'relative', right: 25, bottom: -0 }}>\n\n            <Tooltip classes={{tooltip:{backgroundColor:'red'} }} title={longText}>\n\n                <img className={classes.button} style={{ height: '30px' }} src='https://i.pinimg.com/originals/0c/b2/36/0cb236777f219f7ddb6d21a8ac7ff2fa.png'></img>\n\n            </Tooltip>\n        </div>\n    )\n}\n//","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InfoComp from '../MapComponents/InfoComp'\n//zIndex: 2, position: 'absolute', top: 80, left: 50\n\nexport default function NormalizeButton(props) {\n    const [value, setValue] = React.useState('minmax');\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        \n        props.getNormalize(event.target.value)\n    };\n    return (\n\n        <div style={{borderRadius:'5px', zIndex: 2, position: 'absolute', top: 20, left: 15,backgroundColor:'$ground',boxShadow:'0 5px 30px',minWidth:'300x' }}>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Normalize options:</FormLabel>\n                <RadioGroup aria-label=\"norm\" name=\"norm1\" value={value} onChange={handleChange}>\n                    <div style={{display:'flex'}}>\n                     \n                    <FormControlLabel value=\"minmax\"  control={<Radio />} label=\"Min Max\"/> \n                    <InfoComp norm={'minmax'}></InfoComp>\n                  \n                    </div>\n                    <div style={{display:'flex'}}>\n                    <FormControlLabel value=\"totaluser\" control={<Radio />} label=\"Total users per country\" />\n                    <InfoComp norm={'total'}></InfoComp>\n                   \n                    </div>\n               </RadioGroup>\n            </FormControl>\n        </div>\n\n    )\n}\n","import React from 'react'\n//import Technologies from '../../Files/Technologies'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n        width: '50vw',\n        position: 'relative',\n\n        left: '50%',\n        transform: 'translate(-50%)',\n\n\n\n\n        '& > * + *': {\n            marginTop: theme.spacing(3),\n        },\n    },\n}));\n\nconst handleInputChange = (params) => {\n    var propsArray = params.InputProps.startAdornment || []\n    if (propsArray.length > 2) {\n        params.InputProps.startAdornment = propsArray.pop()\n        return <TextField {...params} variant=\"outlined\" label=\"Technology\" placeholder=\"Technology\" />\n    }\n    else return <TextField {...params} variant=\"outlined\" label=\"Technology\" placeholder=\"Technology\" />\n    // if (params.InputProps.startAdornment == undefined)\n\n    // else return <TextField {...params} variant=\"outlined\" label=\"Technology\" placeholder=\"Technology\" />\n}\nexport default function ComprationBar(props) {\n    const Check = (e) => {\n        console.log(e)\n    }\n    const classes = useStyles();\n    return (\n        <div className={classes.root} style={{}}>\n            <Autocomplete\n                multiple\n                id=\"multiple-limit-tags\"\n                options={props.Tags}\n                getOptionLabel={(Tags) => Tags.TagName}\n                onChange={(event, value) => props.getTechResearch(value)}\n                renderInput={(params) => {\n                    return <TextField {...params} variant=\"outlined\" label=\"Technology\" placeholder=\"Technology\" />\n                }}\n\n            />\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Feature(props) {\n      var totalTechs=props.feature.properties[0].counter+props.feature.properties[1].counter\n      var firstDeg=(props.feature.properties[0].counter/totalTechs)*360\n      var deg=0\n      var percent=parseInt((firstDeg/360)*100) \n console.log(firstDeg)\n if(isNaN(percent)===true)\n percent=0\n//var firstDeg=90\nif(firstDeg<180){\n    deg=firstDeg+90\n   \n    return (\n        <div>\n              <div style={{position:'relative',textAlign:'center',margin:'auto',width:'70px',height:'70px',borderRadius:'100%',backgroundColor:'green',backgroundImage:'linear-gradient('+deg+'deg, transparent 50%, red 50%),linear-gradient(90deg, red 50%, transparent 50%)'}}>\n            <div style={{position:'relative',top:'10px',left:'10px',textAlign:'center',width:'50px',height:'50px',borderRadius:'100%',backgroundColor:'#ffffff'}}><span style={{color:'green'}}>{percent}%</span><br></br><span style={{color:'red'}}>{100-percent}%</span></div>\n            </div>\n            \n            </div>\n      \n    )\n   \n}\nelse \ndeg=firstDeg-90\n{return (\n    <div>\n    <div style={{position:'relative',textAlign:'center',margin:'auto',width:'70px',height:'70px',borderRadius:'100%',backgroundColor:'green',backgroundImage:'linear-gradient('+deg+'deg, transparent 50%, green 50%),linear-gradient(90deg, red 50%, transparent 50%)'}}>\n    <div style={{position:'relative',top:'10px',left:'10px',textAlign:'center',width:'50px',height:'50px',borderRadius:'100%',backgroundColor:'#ffffff'}}><span style={{color:'green'}}>{percent}%</span><br></br><span style={{color:'red'}}>{100-percent}%</span></div>\n    </div>\n   \n    </div>\n    )\n}\n}\n","import React from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport DataTable, { createTheme } from 'react-data-table-component';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core'\n\nconst createtheme = createTheme('solarized', {\n    background: {\n        default: `-moz - linear - gradient(-45deg, #ffffff 0 %, #FFFDB6 52 %, #FFD36A 100 %)\n       -webkit - linear - gradient(-45deg, #ffffff 0 %, #FFFDB6 52 %, #FFD36A 100 %)\n      linear - gradient(135deg, #ffffff 0 %, #FFFDB6 52 %, #FFD36A 100 %)`\n    }\n});\n\nvar makeColumns = (props) => {\n    var columns = []\n    props.data.features.map(item => {\n\n        switch (Object.keys(item.properties).length) {\n            case 1://case for empty tech\n            case 9://case for one tech\n                columns = [\n                    {\n                        name: '',\n                        selector: 'pic',\n                        //  cell: row => <div style={{ width:'30px' }}>{row.pic}</div>\n\n                    },\n                    {\n                        name: 'Country',\n                        selector: 'country',\n                        sortable: true,\n\n                    }, {\n                        name: 'Number of users',\n                        selector: 'counter', sortable: true,\n                    }, {\n                        name: 'Number of questions',\n                        selector: 'question', sortable: true\n                    }, {\n                        name: 'Number of answers',\n                        selector: 'answer', sortable: true\n                    }, {\n                        name: 'Total users',\n                        selector: 'totalusers', sortable: true\n                    }]\n                break\n            case 2://case for 2 tech\n                columns = [\n                    {\n                        name: '',\n                        selector: 'pic'\n                    },\n                    {\n                        name: 'Country',\n                        selector: 'country',\n                        sortable: true,\n\n                    }, {\n                        name: 'Number of users',\n                        selector: 'counter', sortable: true,\n                        cell: row => <div style={{ color: 'red' }}><div style={{ color: 'green' }} >{row.counter1}</div>{row.counter2}</div>\n                    }, {\n                        name: 'Number of questions',\n                        selector: 'question', sortable: true,\n                        cell: row => <div style={{ color: 'red' }}><div style={{ color: 'green' }}>{row.question1}</div>{row.question2}</div>\n                    }, {\n                        name: 'Number of answers',\n                        selector: 'answer', sortable: true,\n                        cell: row => <div style={{ color: 'red' }}><div style={{ color: 'green' }}>{row.answer1}</div>{row.answer2}</div>\n                    }, {\n                        name: 'Total users',\n                        selector: 'totalusers', sortable: true\n                    }]\n                break\n\n\n        }\n\n    })\n    return columns\n}\nvar makeData = (props) => {\n    var data = []\n    props.data.features.map(item => {\n\n        switch (Object.keys(item.properties).length) {\n            case 1:\n            case 9:\n                var obj = {\n                    key: item,\n                    pic: <img src={item.pic} style={{ width: '30px', paddingRight: '5px' }}></img>,\n                    country: item.properties.name,\n                    counter: item.properties.counter,\n                    question: item.properties.question,\n                    answer: item.properties.answer,\n                    totalusers: item.properties.totalusers\n                }\n                data.push(obj)\n                break\n            case 2:\n                var obj = {\n                    key: item,\n                    pic: <img src={item.pic} style={{ width: '30px', paddingRight: '5px' }}></img>,\n                    country: `${item.properties[0].name}`,\n                    counter1: item.properties[0].counter,\n                    counter2: item.properties[1].counter,\n                    question1: item.properties[0].question,\n                    question2: item.properties[1].question,\n                    answer1: item.properties[0].answer,\n                    answer2: item.properties[1].answer,\n                    totalusers: item.properties[0].totalusers\n                }\n                data.push(obj)\n\n        }\n\n    })\n    return data\n\n}\nvar getTech = (props) => {\n    var tech = []\n    props.tech.map(item => {\n        tech.push(item.TagName)\n    })\n    return tech\n}\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\nconst ClearButton = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  height: 34px;\n  width: 32px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\n    <>\n        <TextField id=\"search\" type=\"text\" placeholder=\"Filter By Name\" value={filterText} onChange={onFilter} />\n        <ClearButton type=\"button\" onClick={onClear}>X</ClearButton>\n    </>\n);\n\n// const conditionalRowStyles = [\n//     {\n//       when: col => col.pic !='',\n//       style: {\n//         backgroundColor: 'green',\n//         color: 'white',\n//         '&:hover': {\n//           cursor: 'pointer',\n//         },\n//       },\n//     },\n//   ];\n\n\nexport default function TableComp(props) {\n\n    const columns = makeColumns(props)\n    const data = makeData(props)\n    const tech = getTech(props)\n    // const BasicTable = () => {\n    //     const [filterText, setFilterText] = React.useState('');\n    //     const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n    //     const filteredItems = data.filter(item => item.name && item.name.includes(filterText));\n    //     const subHeaderComponentMemo = React.useMemo(() => {\n    //         const handleClear = () => {\n    //             if (filterText) {\n    //                 setResetPaginationToggle(!resetPaginationToggle);\n    //                 setFilterText('');\n    //             }\n    //         }\n    //         return <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />;\n\n    //     },[filterText, resetPaginationToggle])\n    // }      \n\n    return (\n\n\n        <DataTable title=\"Statistics\"\n            columns={columns}\n            data={data}\n            fixedHeader\n            fixedHeaderScrollHeight=\"300px\"\n            onRowClicked={props.addMarker}\n            subHeader\n            theme=\"solarized\"\n\n        //conditionalRowStyles={conditionalRowStyles}\n\n\n\n        />\n\n\n    )\n}\n\n\n\n\n","import React from 'react'\n\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  \nvar colors=['green','red','blue']\n\nexport default function TechComp(props) {\n    return (\n        <div style={{ position: 'absolute', zIndex: 2, left: 15, bottom: 50}}>\n            {props.techs.map((tech,index)=>{\n                return<div key={tech.TagName}><span style={{height:'15px',width:'15px' ,backgroundColor:colors[index],borderRadius:'50%',display:'inline-block'}}></span>{tech.TagName}</div>\n            })}\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport ReactDOMServer from 'react-dom/server';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport styled from 'styled-components';\n//import Slider from './MapComponents/Slider';\nimport Countries from '../Boundries/countries.json'\nimport YearSlider from './MapComponents/YearSlider'\nimport NormalizeButton from './MapComponents/NormalizeButton'\nimport ComparisonBar from './MapComponents/ComparisonBar'\nimport Feature from './MapComponents/Feature'\nimport TableComp from './MapComponents/TableComp'\nimport TechComp from './MapComponents/TechComp'\nimport { Button } from '@material-ui/core'\nimport LoadingOverlay from 'react-loading-overlay';\nconst Wrapper = styled.div`\n\nwidth: ${props => props.width}\nheight: ${props => props.height}\nborder:${props => props.border}\n`;\n\nexport default class Map extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.section = React.createRef();\n        this.state = {\n\n            Tags: props.Tags,\n            Flags: props.Flags,\n            Year: 2015,    //the year from the slider\n            TechResearch: [], //the tech i want to research\n            GeoJsonFile: JSON.parse(JSON.stringify(Countries)),\n            Layer: Countries,\n            Normalize: 'minmax',//nomalize technique\n            TechChoosen: [],\n            Loading: false\n\n\n\n        }\n        this.handleClick = async (value) => {\n            this.setState({\n                Loading: !this.state.Loading\n            })\n            await this.getTechResearch(value);\n\n        }\n    }\n\n\n\n    LoadMap = () => {          //load the map\n\n        var corner1 = L.latLng(-250, 250)\n        var corner2 = L.latLng(250, -250)\n\n\n\n        this.map = L.map('map', {\n            maxBounds: L.latLngBounds(corner1, corner2),\n            center: [45, 15],\n            zoom: 0,\n            zoomControl: false,\n\n\n\n\n        });\n        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n            subdomains: 'abcd',\n            maxZoom: 7,\n            minZoom: 2,\n\n\n        }).addTo(this.map);\n        this.layer = L.geoJSON().addTo(this.map)\n    }\n    addFlag = () => {\n        Countries.features.map(item => {\n            this.state.Flags.map(flag => {\n                if (item.id === flag.alpha3)\n                    item.pic = flag.file_url\n            })\n        })\n        this.state.GeoJsonFile.features.map(item => {\n            this.state.Flags.map(flag => {\n                if (item.id === flag.alpha3)\n                    item.pic = flag.file_url\n            })\n        })\n\n\n    }\n    componentWillMount = () => {\n        this.addFlag()\n    }\n\n    componentDidMount = () => {\n\n\n\n        this.LoadMap();\n        this.LayerGroup = L.layerGroup().addTo(this.map)\n\n        //this.getInvolvedYear()\n        this.initsetStyle()\n\n\n    }\n\n    initsetStyle = () => {\n        this.layer = L.geoJSON(Countries, {                       //making style for counteries\n\n            style: function (feature) {\n\n                return {\n                    color: 'black',//stroke(border) color\n                    fillColor: 'green',// the color of the filler\n                    fillOpacity: 0,\n\n                    stroke: false, //like border\n\n\n\n                }\n\n\n\n            },\n            onEachFeature: function (feature, layer) {\n\n                const questionMark = 'https://image.flaticon.com/icons/svg/906/906794.svg'\n                const answerMark = 'https://image.flaticon.com/icons/svg/475/475760.svg'\n\n\n                layer.bindTooltip(function () {\n                    return feature.properties.name\n\n\n\n                }) // when hover tooltip\n                // layer.(feature.properties.name)\n\n                layer.on(\"mouseover\", function () {\n                    this.setStyle({\n                        stroke: true,\n                        weight: 1,\n                        color: 'grey'\n                    })\n                })\n                layer.on('mouseout', function () {\n                    this.setStyle({ stroke: 0 })\n                })\n\n\n            },\n\n\n\n        }).addTo(this.map)\n\n\n\n    }\n\n\n\n    setStyle = (norm) => {\n        console.log(this.c)\n        this.layer = L.geoJSON(this.c, {                       //making style for counteries\n\n            style: function (feature) {//styling for one technology\n                // console.log(Object.keys(feature.properties).length)\n                // console.log(feature.properties)\n                switch (Object.keys(feature.properties).length) {\n                    case 9:\n                        if (norm === 'minmax')\n                            return {\n                                color: 'black',//stroke(border) color\n                                fillColor: 'green',// the color of the filler\n                                fillOpacity: feature.properties.color1,\n\n                                stroke: false, //like border\n\n\n\n                            }\n                        else return {\n                            color: 'black',//stroke(border) color\n                            fillColor: 'green',// the color of the filler0\n                            fillOpacity: feature.properties.color2,\n\n                            stroke: false, //like border\n\n                        }\n                        break\n                    case 2:\n\n                        if (norm === 'minmax') {\n                            var color = feature.properties[0].counter > feature.properties[1].counter ? 'green' : 'red'\n                            var opacity = feature.properties[0].counter > feature.properties[1].counter ? feature.properties[0].color1 : feature.properties[1].color1\n                            return {\n                                color: 'black',//stroke(border) color\n                                fillColor: color,// the color of the filler\n                                fillOpacity: opacity,\n\n                                stroke: false, //like border\n\n\n\n                            }\n                        }\n\n                        else return {\n\n                            color: 'black',//stroke(border) color\n                            fillColor: feature.properties[0].counter > feature.properties[1].counter ? 'green' : 'red',// the color of the filler0\n                            fillOpacity: feature.properties[0].color2,\n\n                            stroke: false, //like border\n\n                        }\n                        break\n\n\n                }\n            },\n            onEachFeature: function (feature, layer) { //featuring for one technology\n\n                layer.bindPopup(() => {\n\n                    switch (Object.keys(feature.properties).length) {\n                        case 9:\n                            if (norm === 'minmax')\n\n\n                                return `<div><strong>${feature.properties.counter.toString()} Users</strong> <div style={{display:flex}}>${feature.properties.question.toString()} Questions</div><div>${feature.properties.answer.toString()} Answers</div></div>`\n                            else return `<strong>${feature.properties.counter.toString()} Users</strong> <div>${feature.properties.totalusers.toString()} Total Users</div><div>${parseInt((feature.properties.color2 * 100)).toString()}% Ratio</div>`\n                            break\n\n                        case 2:\n                            if (norm === 'minmax')\n                                return `<div><table>\n                                <tr>\n                    <th><img style=\"width:30px; border:1px solid black\" src=${feature.pic}></img></th>\n                    <th align=\"center\">${feature.properties[0].technology.toString()}</th>\n                    <th align=\"center\">${feature.properties[1].technology.toString()}</th>\n                  </tr>\n                  <tr>\n                    <td>Users</td>\n                    <td align=\"center\">${feature.properties[0].counter.toString()}</td>\n                    <td align=\"center\">${feature.properties[1].counter.toString()}</td>\n                  </tr>\n                  <tr>\n                    <td>Questions</td>\n                    <td align=\"center\">${feature.properties[0].question.toString()}</td>\n                    <td align=\"center\">${feature.properties[1].question.toString()}</td>\n                  </tr>\n                  <tr>\n                    <td>Answers</td>\n                    <td align=\"center\">${feature.properties[0].answer.toString()}</td>\n                    <td align=\"center\">${feature.properties[1].answer.toString()}</td>\n                  </tr>\n                                </table>${ReactDOMServer.renderToString(<Feature feature={feature}></Feature>)}</div>`\n\n                            // return `<strong>${feature.properties[0].counter.toString()} Users</strong> <div style={{display:flex}}>${feature.properties[0].question.toString()} Questions</div><div>${feature.properties[0].answer.toString()} Answers</div> `\n                            //`<strong>${feature.properties[0].counter.toString()} Users</strong> <div>${feature.properties[0].totalusers.toString()} Total Users</div><div>${parseInt((feature.properties[0].color2 * 100)).toString()}% Ratio</div>`\n                            else return `<div><table>\n                            <tr>\n                <th><img style=\"width:30px; border:1px solid black\" src=${feature.pic}></img></th>\n                <th>${feature.properties[0].technology.toString()}</th>\n                <th>${feature.properties[1].technology.toString()}</th>\n              </tr>\n              <tr>\n                <td>Users</td>\n                <td align=\"center\">${feature.properties[0].counter.toString()}</td>\n                <td align=\"center\">${feature.properties[1].counter.toString()}</td>\n              </tr>\n              <tr>\n                <td>Total users</td>\n                <td colspan=\"2\" align=\"center\">${feature.properties[0].totalusers}</td>\n\n              </tr>\n              <tr>\n                <td>Ratio by total</td>\n                <td align=\"center\">${parseInt((feature.properties[0].counter / feature.properties[0].totalusers * 100) || 0).toString()}%</td>\n                <td align=\"center\">${parseInt((feature.properties[1].counter / feature.properties[0].totalusers * 100) || 0).toString()}%</td>\n              </tr>\n                            </table>${ReactDOMServer.renderToString(<Feature feature={feature}></Feature>)}</div>`\n                            break\n\n                    }\n                })// when click do popup\n                layer.bindTooltip(function () {\n                    switch (Object.keys(feature.properties).length) {\n                        case 9:\n                            return feature.properties.name\n                            break\n                        case 2:\n                            return feature.properties[0].name\n                            break\n                    }\n\n\n                }) // when hover tooltip\n                // layer.(feature.properties.name)\n\n                layer.on(\"mouseover\", function () {\n                    this.setStyle({\n                        stroke: true,\n                        weight: 1,\n                        color: 'grey'\n                    })\n                })\n                layer.on('mouseout', function () {\n                    this.setStyle({ stroke: 0 })\n                })\n\n            },\n\n\n\n        }).addTo(this.map)\n\n\n\n    }\n\n    getYear = (year) => {\n        if (this.state.Year !== year)\n            this.setState({\n                Year: parseInt(year.target.innerText),\n            })\n        if (this.state.TechResearch.length !== 0) {\n            console.log(this.state.TechResearch.length)\n            this.getTechnologyYear(this.state.TechChoosen)\n        }\n\n\n\n    }\n\n\n\n    GetNew = () => {\n        this.map.removeLayer(this.layer)\n        this.setStyle(this.state.Normalize);\n\n    }\n    getNormalize = (value) => {\n        this.setState({ Normalize: value })\n        this.map.removeLayer(this.layer)\n        this.setStyle(value);\n\n    }\n\n    async getTechResearch(value) {//async\n        this.setState({\n            TechResearch: value\n        })//await\n\n        await this.getTechnology(value)\n\n        if (value.length === 0) {\n            this.map.removeLayer(this.layer)\n            console.log(this.state.GeoJsonFile)\n            this.setState({\n                Layer: this.state.GeoJsonFile,\n\n            })\n\n\n            this.initsetStyle()\n\n        }\n\n    }\n\n\n    async getTechnology(techs) { //bring technologies from databse\n        const techChoosen = await Promise.all(techs.map(async tech => {\n            const res = await fetch(`http://localhost:5000/involved/${tech.TagName}`)\n            const json = res.json()\n            return json\n        }))\n        console.log(techs)\n\n        this.setState({\n            TechChoosen: techChoosen,\n            Loading: !this.state.Loading\n        })\n        this.getTechnologyYear(techChoosen)\n\n\n    }\n    getMinMax = (country) => {  //getting the the min max value for normalization\n\n\n        var array = []\n        var array2 = []\n\n        country.features.map(item => {\n            array.push(item.properties.counter)\n            array2.push(isNaN((item.properties.counter / (item.properties.totalusers))) == true ? 0 : item.properties.counter / (item.properties.totalusers))\n            item.properties.color2 = (isNaN((item.properties.counter / (item.properties.totalusers))) == true ? 0 : item.properties.counter / (item.properties.totalusers))\n\n\n        })\n\n\n        return {\n            maxValue: Math.max.apply(Math, array),\n            minValue: Math.min.apply(Math, array),\n            maxValue2: Math.max.apply(Math, array2),\n            minValue2: Math.min.apply(Math, array2),\n\n\n        }\n\n    }\n\n\n    getTechnologyYear = (choosen) => {\n        var techChoosenYear = choosen.map(item => {\n            const results = item.filter(k => k.features[0].properties.year == this.state.Year)\n\n            return results[0]\n        })\n        var Merged = this.MergeFeatures(techChoosenYear)\n        console.log(Merged)\n\n        this.setState({ Layer: Merged })\n        this.GetNew()\n    }\n    MergeFeatures = (collections) => {\n\n        var numOfTechs = collections.length\n        this.c = JSON.parse(JSON.stringify(Countries))\n        switch (numOfTechs) {\n            case 1:\n                for (var i = 0; i < this.c.features.length; i++) {\n                    this.c.features[i].properties = collections[0].features[i].properties\n                }\n                break\n\n            case 2:\n                for (var i = 0; i < this.c.features.length; i++) {\n                    this.c.features[i].properties = [collections[0].features[i].properties, collections[1].features[i].properties]\n                }\n                break\n        }\n        this.setState({\n            Loading: false\n        })\n\n        return this.c\n\n\n\n    }\n\n\n    addMarkers = (e) => {//not that good have to fix it\n\n        var icon = new L.icon({\n            iconSize: [20, 27],\n            iconAnchor: [13, 27],\n            popupAnchor: [1, -24],\n            iconUrl: 'https://clipartart.com/images/google-maps-marker-transparent-clipart.png'\n        })\n        e = e.key\n        switch (Object.keys(e.properties).length) {\n            case 1:\n            case 9:\n                if (e.geometry.type === 'Polygon') {\n                    this.marker = L.marker([e.geometry.coordinates[0][0][1], e.geometry.coordinates[0][0][0]], { icon: icon }).addTo(this.LayerGroup);\n                    this.marker.bindPopup(e.properties.name).openPopup()\n                }\n                else {\n                    this.marker = L.marker([e.geometry.coordinates[0][0][0][1], e.geometry.coordinates[0][0][0][0]], { icon: icon }).addTo(this.LayerGroup);\n                    this.marker.bindPopup(e.properties.name).openPopup()\n\n                }\n                break\n            case 2:\n                if (e.geometry.type === 'Polygon') {\n                    this.marker = L.marker([e.geometry.coordinates[0][0][1], e.geometry.coordinates[0][0][0]], { icon: icon }).addTo(this.LayerGroup);\n                    this.marker.bindPopup(e.properties[0].name).openPopup()\n                }\n                else {\n                    this.marker = L.marker([e.geometry.coordinates[0][0][0][1], e.geometry.coordinates[0][0][0][0]], { icon: icon }).addTo(this.LayerGroup);\n                    this.marker.bindPopup(e.properties[0].name).openPopup()\n\n                }\n                break\n\n        }\n\n\n    }\n\n    clearMarkers = () => {\n        this.LayerGroup.clearLayers()\n    }\n    handleScroll = () => {\n        this.section.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\"\n        })\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <LoadingOverlay\n                    active={this.state.Loading}\n                    spinner\n                    text='Loading your content...'\n                >\n                    <ComparisonBar Tags={this.state.Tags} getTechResearch={this.handleClick}></ComparisonBar>\n\n                    <div style={{ position: 'relative', display: \"flex\", justifyContent: \"center\", alignItems: \"center\", paddingTop: '10px' }}>\n\n                        <Wrapper id='map' style={{ height: '70vh', zIndex: 1, width: '98vw', boxShadow: '0 0px 20px' }}></Wrapper>\n                        <NormalizeButton getNormalize={this.getNormalize} ></NormalizeButton>\n                        <YearSlider GetNew={this.GetNew} getYear={this.getYear}></YearSlider>\n                        <Button style={{ position: 'absolute', zIndex: 2, left: 15, bottom: 10, boxShadow: '0 0px 20px' }} onClick={this.clearMarkers}>Clear Markers</Button>\n                        <TechComp techs={this.state.TechResearch}></TechComp>\n                        <div onClick={this.handleScroll} style={{ position: 'absolute', bottom: '-20px', left: '50%', zIndex: 3, transform: 'translate(-50%, -50%)', margin: '0', marginRight: '-50%', backgroundColor: 'white', width: '100px', boxShadow: '0 0px 20px', textAlign: 'center', borderRadius: '20px', cursor: 'grab' }} >More stats</div>\n                    </div>\n                    <div ref={this.section} >\n                        {console.log(this.state.GeoJsonFile)}\n\n                        <TableComp className='tbl' data={this.state.Layer} tech={this.state.TechResearch} addMarker={this.addMarkers} ></TableComp>\n                    </div>\n                </LoadingOverlay>\n            </div >\n        )\n    }\n\n}\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst images = [\r\n    {\r\n        url: require('../../Pictures/globe1.jpg'),\r\n        title: 'Map',\r\n        width: '40%',\r\n        to: '/map'\r\n    },\r\n    {\r\n        url: require('../../Pictures/chart.jpg'),\r\n        title: 'Graph',\r\n        width: '40%',\r\n        to: '/graph'\r\n    },\r\n\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        minWidth: 300,\r\n        width: '100%',\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        height: 300,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100% !important', // Overrides inline-style\r\n            height: 100,\r\n        },\r\n        '&:hover, &$focusVisible': {\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n                opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n                opacity: 0,\r\n            },\r\n            '& $imageTitle': {\r\n                border: '4px solid currentColor',\r\n            },\r\n        },\r\n    },\r\n    focusVisible: {},\r\n    imageButton: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: theme.palette.common.white,\r\n    },\r\n    imageSrc: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center 40%',\r\n    },\r\n    imageBackdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.4,\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n    imageTitle: {\r\n        position: 'relative',\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n        fontSize: 40\r\n    },\r\n    imageMarked: {\r\n        height: 3,\r\n        width: 18,\r\n        backgroundColor: theme.palette.common.white,\r\n        position: 'absolute',\r\n        bottom: -2,\r\n        left: 'calc(50% - 9px)',\r\n        transition: theme.transitions.create('opacity'),\r\n    },\r\n}));\r\n\r\nexport default function ButtonBases() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {images.map((image) => (\r\n                <ButtonBase\r\n                    focusRipple\r\n                    key={image.title}\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    style={{\r\n                        width: image.width,\r\n                    }}\r\n                    component={Link}\r\n                    to={image.to}\r\n                >\r\n                    <span\r\n                        className={classes.imageSrc}\r\n                        style={{ backgroundImage: `url(${image.url})` }}\r\n                    />\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"subtitle1\"\r\n                            color=\"inherit\"\r\n                            className={classes.imageTitle}\r\n                        >\r\n                            {image.title}\r\n                            <span className={classes.imageMarked} />\r\n                        </Typography>\r\n                    </span>\r\n                </ButtonBase>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport Navbar from './navbar'\nimport Graph from './Graph'\nimport Map from './Map'\nimport ButtonBase from './HomeComponents/ButtonBase'\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { Box } from '@material-ui/core';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: \"center\"\n    },\n    h1: {\n        fontFamily: 'Comfortaa',\n        fontSize: 80\n    },\n    p: {\n        fontFamily: 'Comfortaa',\n        fontSize: 25,\n        width: '80%',\n        textAlign: 'center'\n\n    }\n})\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Countries: [],\n            Tags: [],\n            Flags: []\n\n        }\n    }\n\n    componentDidMount = () => {\n\n        this.getTags()\n        this.getFlags()\n        this.getCountries()\n\n    }\n\n    getTags = () => {\n        fetch(`http://localhost:5000/Technology`)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    Tags: res\n                })\n            })\n\n    }\n    getFlags = () => {\n        fetch(`http://localhost:5000/flags`)\n            .then(res => res.json())\n            .then(res => this.setState({\n                Flags: res\n            }))\n\n    }\n    getCountries = () => {\n        fetch(`http://localhost:5000/countries`)\n            .then(res => res.json())\n            .then(res => this.setState({\n                Countries: res\n            }))\n    }\n\n\n\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Router className=\"App\">\n                <div>\n                    <Navbar></Navbar>\n                </div>\n                <Route exact path='/' >\n                    <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\" mt={10}>\n                        <Box>\n                            <h1 className={classes.h1}>Welcom to Querflow</h1>\n                        </Box>\n                        <Box className={classes.p}>\n                            Querflow is a visual research platform based on Stackoverflow database.{<br />} The system\n                            provides easy Interface to explore programming language development through time &amp;\n                            location dimensions.\n\n                        </Box>\n                        <Box style={{ width: '80%' }} mt={10} ml={40}>\n                            <ButtonBase />\n                        </Box>\n                    </Box>\n\n                </Route>\n                <Route path='/map' exact strict>\n                    {<Map Tags={this.state.Tags} Flags={this.state.Flags} ></Map>}\n\n                </Route>\n                <Route path='/graph' exact strict>\n                    {<Graph Tags={this.state.Tags} countries={this.state.Countries} ></Graph>}\n                </Route>\n            </Router >\n        )\n    }\n}\n\nexport default withStyles(styles)(Home);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Querflow from './Components/Querflow';\n\nfunction App() {\n\treturn <Querflow />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}